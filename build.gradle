import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.github.jk1.license.render.*

plugins {
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
    id 'com.github.jk1.dependency-license-report' version '2.5'
}

group = 'pl.codziennemotto'
version = '1.0.0-beta.1'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

licenseReport {
    outputDir = "$projectDir/licenses"

    renderers = [new XmlReportRenderer('third-party-libs.xml', 'Third Party Libraries')]
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'io.swagger:swagger-annotations:1.6.8'
    implementation 'org.simplejavamail:simple-java-mail:8.1.3'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform {
        includeTags 'UnitTest'
    }
}

tasks.register("unitTest", Test) {
    useJUnitPlatform {
        includeTags 'UnitTest'
    }
}

tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        includeTags 'IntegrationTest'
    }
}

tasks.register("webLayerTest", Test) {
    useJUnitPlatform {
        includeTags 'WebLayerTest'
    }
}

tasks.register("allTests", Test) {
    useJUnitPlatform {
        includeTags 'UnitTest', 'IntegrationTest', 'WebLayerTest'
    }
}